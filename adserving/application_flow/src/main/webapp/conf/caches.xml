<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">

        <bean id="country_codes_mappings_cache" class="com.kritter.geo.common.entity.reader.CountryCodesMappingsCache">
            <constructor-arg index="0">
                <list>
                </list>
            </constructor-arg>
            <constructor-arg index="1"><ref bean="country_codes_mappings_cache_properties"/></constructor-arg>
            <constructor-arg index="2"><ref bean="db-manager"/></constructor-arg>
            <constructor-arg index="3" value="country_codes_mappings_cache"/>
        </bean>

        <bean id="ui_country_id_cache" class="com.kritter.geo.common.entity.reader.CountryUserInterfaceIdCache">
            <constructor-arg index="0">
                <list>
                    <value>com.kritter.geo.common.entity.CountryUserInterfaceIdSecondaryIndex</value>
                    <value>com.kritter.geo.common.entity.CountryUserInterfaceIdCountryCodeSecondaryIndex</value>
                </list>
            </constructor-arg>
            <constructor-arg index="1"><ref bean="ui_country_id_cache_properties"/></constructor-arg>
            <constructor-arg index="2"><ref bean="db-manager"/></constructor-arg>
            <constructor-arg index="3" value="ui_country_id_cache"/>
        </bean>

        <bean id="ui_isp_id_cache" class="com.kritter.geo.common.entity.reader.ISPUserInterfaceIdCache">
            <constructor-arg index="0">
                <list>
                    <value>com.kritter.geo.common.entity.IspUserInterfaceIdSecondaryIndex</value>
                </list>
            </constructor-arg>
            <constructor-arg index="1"><ref bean="ui_isp_id_cache_properties"/></constructor-arg>
            <constructor-arg index="2"><ref bean="db-manager"/></constructor-arg>
            <constructor-arg index="3" value="ui_isp_id_cache"/>
        </bean>

	<bean id="ad_entity_cache" class="com.kritter.serving.demand.cache.AdEntityCache">
	    <constructor-arg index="0">
		<list> 
                    <value>com.kritter.serving.demand.index.CountryIdIndex</value>
                    <value>com.kritter.serving.demand.index.CountryCarrierIdIndex</value>
                    <value>com.kritter.serving.demand.index.BrandIdIndex</value>
                    <value>com.kritter.serving.demand.index.ModelIdIndex</value>
                    <value>com.kritter.serving.demand.index.AdGuidIndex</value>
		</list>
	    </constructor-arg>
	    <constructor-arg index="1"><ref bean="ad_entity_cache_properties"/></constructor-arg>
	    <constructor-arg index="2"><ref bean="db-manager"/></constructor-arg>
	    <constructor-arg index="3" value="ad_entity_cache"/>
	</bean>

    <bean id="ssp_global_rules_cache" class="com.kritter.common.caches.ssp_rules.SspGlobalRulesCache">
        <constructor-arg index="0">
            <list>
            </list>
        </constructor-arg>
        <constructor-arg index="1"><ref bean="ssp_global_rules_properties"/></constructor-arg>
        <constructor-arg index="2"><ref bean="db-manager"/></constructor-arg>
        <constructor-arg index="3" value="ssp_global_rules_cache"/>
    </bean>

    <bean id="account_cache" class="com.kritter.common.caches.account.AccountCache">
        <constructor-arg index="0">
            <list>
            </list>
        </constructor-arg>
        <constructor-arg index="1"><ref bean="account_cache_properties"/></constructor-arg>
        <constructor-arg index="2"><ref bean="db-manager"/></constructor-arg>
        <constructor-arg index="3" value="account_cache"/>
    </bean>
	<bean id="campaign_cache" class="com.kritter.serving.demand.cache.CampaignCache">
	    <constructor-arg index="0">
		<list>
		</list>
	    </constructor-arg>
	    <constructor-arg index="1"><ref bean="campaign_cache_properties"/></constructor-arg>
	    <constructor-arg index="2"><ref bean="db-manager"/></constructor-arg>
	    <constructor-arg index="3" value="campaign_cache"/>
	</bean>

	<bean id="creative_cache" class="com.kritter.serving.demand.cache.CreativeCache">
	    <constructor-arg index="0">
		<list>
		</list>
	    </constructor-arg>
	    <constructor-arg index="1"><ref bean="creative_cache_properties"/></constructor-arg>
	    <constructor-arg index="2"><ref bean="db-manager"/></constructor-arg>
	    <constructor-arg index="3" value="creative_cache"/>
	</bean>

        <bean id="creative_slot_cache" class="com.kritter.serving.demand.cache.CreativeSlotCache">
            <constructor-arg index="0">
                <list>
                </list>
            </constructor-arg>
            <constructor-arg index="1"><ref bean="creative_slot_cache_properties"/></constructor-arg>
            <constructor-arg index="2"><ref bean="db-manager"/></constructor-arg>
            <constructor-arg index="3" value="creative_slot_cache"/>
        </bean>

        <bean id="creative_slot_size_cache" class="com.kritter.common.caches.slot_size_cache.CreativeSlotSizeCache">
            <constructor-arg index="0"><ref bean="db-manager"/></constructor-arg>
            <constructor-arg index="1" value="3600000"/>
        </bean>

        <bean id="external_supply_attr_cache" class="com.kritter.common.caches.ext_supply_attr_cache.ExternalSupplyAttributesCache">
            <constructor-arg index="0"><ref bean="db-manager"/></constructor-arg>
            <constructor-arg index="1" value="600000"/>
        </bean>

        <bean id="creative_banner_cache" class="com.kritter.serving.demand.cache.CreativeBannerCache">
            <constructor-arg index="0">
                <list>
                </list>
            </constructor-arg>
            <constructor-arg index="1"><ref bean="creative_banner_cache_properties"/></constructor-arg>
            <constructor-arg index="2"><ref bean="db-manager"/></constructor-arg>
            <constructor-arg index="3" value="creative_banner_cache"/>
        </bean>

        <bean id="native_icon_cache" class="com.kritter.common.caches.native_icon_cache.NativeIconCache">
            <constructor-arg index="0">
                <list>
                </list>
            </constructor-arg>
            <constructor-arg index="1"><ref bean="native_icon_cache_properties"/></constructor-arg>
            <constructor-arg index="2"><ref bean="db-manager"/></constructor-arg>
            <constructor-arg index="3" value="native_icon_cache"/>
        </bean>

        <bean id="native_screenshot_cache" class="com.kritter.common.caches.native_screenshot_cache.NativeScreenshotCache">
            <constructor-arg index="0">
                <list>
                </list>
            </constructor-arg>
            <constructor-arg index="1"><ref bean="native_screenshot_cache_properties"/></constructor-arg>
            <constructor-arg index="2"><ref bean="db-manager"/></constructor-arg>
            <constructor-arg index="3" value="native_screenshot_cache"/>
        </bean>
        
        <bean id="handset_detector" class="com.kritter.device.detector.HandsetDetector">
            <constructor-arg index="0" value="com.kritter.device.index.HandsetMakeModelSecondaryIndex"/>
            <constructor-arg index="1"><ref bean="handset_detector_cache_properties"/></constructor-arg>
            <constructor-arg index="2"><ref bean="db-manager"/></constructor-arg>
            <constructor-arg index="3" value="handset_detector"/>
            <constructor-arg index="4"><ref bean="wurfl_files_manager"/></constructor-arg>
        </bean>

	<bean id="site_cache" class="com.kritter.common.site.cache.SiteCache">
	    <constructor-arg index="0">
		<list>
		</list>
	    </constructor-arg>
	    <constructor-arg index="1"><ref bean="site_cache_props"/></constructor-arg>
	    <constructor-arg index="2"><ref bean="db-manager"/></constructor-arg>
	    <constructor-arg index="3" value="site_cache"/>
	</bean>

        <bean id="site_meta_data_cache" class="com.kritter.common.site.cache.SiteMetaDataCache">
            <constructor-arg index="0">
                <list>
                </list>
            </constructor-arg>
            <constructor-arg index="1"><ref bean="site_meta_data_cache_props"/></constructor-arg>
            <constructor-arg index="2"><ref bean="db-manager"/></constructor-arg>
            <constructor-arg index="3" value="site_meta_data_cache"/>
        </bean>

        <bean id="offline_bidder_data_cache" class="com.kritter.bidder.online.cache.ServedEntityBidderDataDBCache">
            <constructor-arg index="0">
                <list>
                </list>
            </constructor-arg>
            <constructor-arg index="1"><ref bean="offline_bidder_data_cache_props"/></constructor-arg>
            <constructor-arg index="2"><ref bean="db-manager"/></constructor-arg>
            <constructor-arg index="3" value="offline_bidder_data_cache"/>
        </bean>

        <bean id="lr_ctr_data_cache" class="com.kritter.adserving.prediction.cache.LogisticRegressionCTRDBCache">
	    <constructor-arg index="0">
                <list>
                </list>
	    </constructor-arg>
            <constructor-arg index="1"><ref bean="lr_ctr_data_cache_props"/></constructor-arg>
	    <constructor-arg index="2"><ref bean="db-manager"/></constructor-arg>
            <constructor-arg index="3" value="lr_ctr_data_cache"/>
        </bean>
         
        <bean id="lr_csr_data_cache" class="com.kritter.adserving.prediction.cache.LogisticRegressionCSRDBCache">
            <constructor-arg index="0">
                <list>
                </list>
            </constructor-arg>
            <constructor-arg index="1"><ref bean="lr_csr_data_cache_props"/></constructor-arg>
            <constructor-arg index="2"><ref bean="db-manager"/></constructor-arg>
            <constructor-arg index="3" value="lr_csr_data_cache"/>
        </bean>

        <bean id="mnc_mcc_data_cache" class="com.kritter.geo.common.entity.reader.MncMccCountryISPDetectionCache">
            <constructor-arg index="0">
                <list>
                </list>
            </constructor-arg>
            <constructor-arg index="1"><ref bean="mnc_mcc_data_cache_props"/></constructor-arg>
            <constructor-arg index="2"><ref bean="db-manager"/></constructor-arg>
            <constructor-arg index="3" value="mnc_mcc_data_cache"/>
        </bean>
  
        <bean id="iab_categories_cache" class="com.kritter.common.caches.iab.categories.IABCategoriesCache">
            <constructor-arg index="0">
                <list>
                        <value>com.kritter.common.caches.iab.index.IABIDIndex</value>
                </list>
            </constructor-arg>
            <constructor-arg index="1"><ref bean="iab_categories_cache_props"/></constructor-arg>
            <constructor-arg index="2"><ref bean="db-manager"/></constructor-arg>
            <constructor-arg index="3" value="iab_categories_cache"/>
        </bean>

        <bean id="maxmind_connection_type_cache" class="com.kritter.geo.common.entity.reader.ConnectionTypeDetectionCache">
            <constructor-arg index="0" value="maxmind_connection_type_cache"/>
            <constructor-arg index="1" value="cache.logger"/>
            <constructor-arg index="2"><ref bean="maxmind_connection_type_cache_props"/></constructor-arg>
        </bean>

	<bean id="req_logging_cache" class="com.kritter.req_logging.ReqLoggingCache">
            <constructor-arg index="0">
                <list>
                </list>
            </constructor-arg>
            <constructor-arg index="1"><ref bean="req_logging_cache_properties"/></constructor-arg>
            <constructor-arg index="2"><ref bean="db-manager"/></constructor-arg>
            <constructor-arg index="3" value="req_logging_cache"/>
   	</bean>

        <!--
        <bean id="user_recent_history_cache" class="com.kritter.nosql.user.recenthistory.UserRecentImpressionHistoryCache">
            <constructor-arg index="0" value="user_recent_history_cache"/>
            <constructor-arg index="1" value="cache.logger"/>
            <constructor-arg index="2" value="1000"/>
            <constructor-arg index="3" value="1"/>
            <constructor-arg index="4"><ref bean="user_aerospike_db"/></constructor-arg>
            <constructor-arg index="5"><ref bean="user_recent_history_cache_props"/></constructor-arg>
        </bean>
        -->

    <!--Cache beans end here -->

    <bean id="cachePool" class="com.kritter.abstraction.cache.entities.CachePool">
        <constructor-arg>
            <list>
                <ref bean="country_codes_mappings_cache"/>
                <ref bean="ui_country_id_cache"/>
                <ref bean="ui_isp_id_cache"/>
                <ref bean="creative_slot_cache"/>
                <ref bean="creative_banner_cache"/>
                <ref bean="creative_cache"/>
                <ref bean="site_cache"/>
                <ref bean="handset_detector"/>
                <ref bean="offline_bidder_data_cache"/>
                <ref bean="ad_entity_cache"/>
                <ref bean="campaign_cache"/>
                <ref bean="lr_ctr_data_cache"/>
                <ref bean="lr_csr_data_cache"/>
                <ref bean="mnc_mcc_data_cache"/>
                <ref bean="iab_categories_cache"/>
                <ref bean="maxmind_connection_type_cache"/>
               <!-- <ref bean="adx_geo_criteria_cache"/>-->
                <ref bean="ssp_global_rules_cache"/>
                <ref bean="account_cache"/>
               <!-- <ref bean="adx_mobile_carrier_cache"/>
                <ref bean="country_code_cache"/>
                <ref bean="operators_cache"/>-->
                <ref bean="site_meta_data_cache"/>
                <!--<ref bean="user_recent_history_cache"/>-->
                <ref bean="native_icon_cache"/>
                <ref bean="native_screenshot_cache"/>
                <ref bean="mobile_app_categories_cache"/>
                <ref bean="vertical_iab_cache"/>
                <ref bean="req_logging_cache"/>
            </list>
        </constructor-arg>
    </bean>

    <bean id="country_codes_mappings_cache_properties" class="java.util.Properties">
      <constructor-arg>
         <props>
           <prop key="refresh_interval">1800000</prop>
           <prop key="query"><![CDATA[select * from country_code_mappings]]></prop>
         </props>
      </constructor-arg>
    </bean>

    <bean id="ui_country_id_cache_properties" class="java.util.Properties">
      <constructor-arg>
         <props>
           <prop key="refresh_interval">1800000</prop>
           <prop key="query"><![CDATA[select * from ui_targeting_country]]></prop>
         </props>
      </constructor-arg>
    </bean>

    <bean id="ui_isp_id_cache_properties" class="java.util.Properties">
      <constructor-arg>
         <props>
           <prop key="refresh_interval">1800000</prop>
           <prop key="query"><![CDATA[select * from ui_targeting_isp]]></prop>
         </props>
      </constructor-arg>
    </bean>
 
    <bean id="ad_entity_cache_properties" class="java.util.Properties"> 
      <constructor-arg>
         <props>
           <prop key="refresh_interval">30000</prop>
           <prop key="query"><![CDATA[select A.id as id,A.guid as guid,A.creative_id as creative_id,A.creative_guid as creative_guid,A.landing_url as landing_url,A.campaign_id as campaign_id,A.campaign_guid as campaign_guid,A.categories_list as ad_categories_list,A.hygiene_list as hygiene_list,A.status_id as status_id,A.marketplace_id as marketplace_id,A.internal_max_bid as internal_max_bid,A.advertiser_bid as advertiser_bid,A.tracking_partner as tracking_partner,A.last_modified as ad_last_modified,T.guid as targeting_profile_guid,T.account_guid as account_guid,AC.id as account_id, AC.demandtype as demandtype, AC.qps as qps,T.brand_list as brand_list,T.model_list as model_list,T.os_json as os_json,T.browser_json as browser_json,T.country_json as country_json,T.carrier_json as carrier_json,T.is_site_list_excluded as is_site_list_excluded,T.direct_supply_inc_exc as direct_supply_inc_exc,T.exchange_supply_inc_exc as exchange_supply_inc_exc,T.category_list as targeting_profile_category_list,T.is_category_list_excluded as is_category_list_excluded,T.custom_ip_file_id_set as custom_ip_file_id_set,T.zipcode_file_id_set as zipcode_file_id_set,T.lat_long as lat_long,T.ext_supply_attributes as ext_supply_attributes,T.supply_source_type as supply_source_type,T.supply_source as supply_source,T.connection_type_targeting_json as connection_type_targeting_json,T.tablet_targeting as tablet_targeting,T.supply_inc_exc as supply_inc_exc,T.hours_list as hours_list,T.midp as midp,T.last_modified as profile_last_modified,T.retargeting as retargeting,T.pmp_deal_json as pmp_deal_json,T.device_type as device_type,A.cpa_goal as cpa_goal,A.adv_domain as adv_domain,A.is_frequency_capped as is_frequency_capped,A.frequency_cap as frequency_cap,A.time_window as time_window,A.bidtype as bidtype,A.impression_cap as impression_cap,A.impressions_accrued as impressions_accrued from (select ad.*, IFNULL(ad_budget.impression_cap,0) as impression_cap, IFNULL(ad_budget.impressions_accrued,0) as impressions_accrued, ad_budget.last_modified as ad_budget_last_modified from ad left join ad_budget on ad.guid = ad_budget.ad_guid) as A,targeting_profile as T,account as AC where A.targeting_guid = T.guid and T.account_guid = AC.guid and (A.last_modified >= '$last_modified' or (A.ad_budget_last_modified is not NULL and A.ad_budget_last_modified >= '$last_modified'));]]></prop>
         </props>
       </constructor-arg>
   </bean>

   <bean id="campaign_cache_properties" class="java.util.Properties">
      <constructor-arg>
         <props>
           <prop key="refresh_interval">30000</prop>
           <prop key="query"><![CDATA[select c.campaign_payout_exchange_payout, c.impressions_accrued as impressions_accrued,c.impression_cap as impression_cap,ab.internal_balance as account_balance,c.id as id,c.guid as guid,c.account_guid as account_id,c.start_date,c.end_date,(cb.internal_daily_budget - cb.internal_daily_burn) as internal_daily_remaining_budget,(cb.internal_total_budget - cb.internal_total_burn) as internal_total_remaining_budget,cb.adv_daily_budget as campaign_adv_daily_budget, (cb.adv_daily_budget - cb.adv_daily_burn) as campaign_adv_daily_remaining_budget,(cb.adv_total_budget - cb.adv_total_burn) as campaign_adv_total_remaining_budget,ab.adv_balance as adv_balance,c.status_id as status_id,c.last_modified as last_modified from (select campaign.*,IFNULL(campaign_impressions_budget.impression_cap,0) as impression_cap, IFNULL(campaign_impressions_budget.impressions_accrued,0) as impressions_accrued, campaign_impressions_budget.last_modified as campaign_imp_budget_last_modified, IFNULL(payout.daily_payout,0) as campaign_payout_exchange_payout, payout.last_modified as campaign_payout_last_modified from campaign left join campaign_impressions_budget on campaign.guid = campaign_impressions_budget.campaign_guid left join (select campaign_id, last_modified, sum(daily_payout) as daily_payout from payout group by campaign_id) payout on campaign.id = payout.campaign_id) as c,campaign_budget as cb, account_budget as ab where c.id=cb.campaign_id and c.account_guid = ab.account_guid and (c.last_modified >= '$last_modified' or cb.last_modified >= '$last_modified' or ab.last_modified >= '$last_modified' or (c.campaign_imp_budget_last_modified is not NULL and c.campaign_imp_budget_last_modified >= '$last_modified') or (c.campaign_payout_last_modified is not NULL and c.campaign_payout_last_modified >= '$last_modified')) group by id]]></prop>
           <prop key="absolute_payout_threshold">0.5</prop>
           <prop key="percent_payout_threshold">25</prop>
         </props>
       </constructor-arg>
   </bean>

   <bean id="creative_cache_properties" class="java.util.Properties">
      <constructor-arg>
         <props>
           <prop key="refresh_interval">30000</prop>
           <prop key="query"><![CDATA[select * from creative_container where last_modified >= '$last_modified']]></prop>
         </props>
       </constructor-arg>
   </bean>

   <bean id="creative_slot_cache_properties" class="java.util.Properties">
      <constructor-arg>
         <props>
           <prop key="refresh_interval">30000</prop>
           <prop key="query"><![CDATA[select * from creative_slots where last_modified >= '$last_modified']]></prop>
         </props>
       </constructor-arg>
   </bean>

   <bean id="creative_banner_cache_properties" class="java.util.Properties">
      <constructor-arg>
         <props>
           <prop key="refresh_interval">30000</prop>
           <prop key="query"><![CDATA[select * from creative_banner where last_modified >= '$last_modified']]></prop>
         </props>
       </constructor-arg>
   </bean>

   <bean id="native_icon_cache_properties" class="java.util.Properties">
      <constructor-arg>
         <props>
           <prop key="refresh_interval">30000</prop>
           <prop key="query"><![CDATA[select * from native_icon where last_modified >= '$last_modified']]></prop>
         </props>
       </constructor-arg>
   </bean>

   <bean id="native_screenshot_cache_properties" class="java.util.Properties">
      <constructor-arg>
         <props>
           <prop key="refresh_interval">30000</prop>
           <prop key="query"><![CDATA[select * from native_screenshot where last_modified >= '$last_modified']]></prop>
         </props>
       </constructor-arg>
   </bean>

   <bean id="site_cache_props" class="java.util.Properties">
      <constructor-arg>
         <props>
           <prop key="refresh_interval">30000</prop>
           <prop key="query"><![CDATA[select * from site where last_modified >= '$last_modified']]></prop>
         </props>
       </constructor-arg>
   </bean>
  
   <bean id="site_meta_data_cache_props" class="java.util.Properties">
      <constructor-arg>
         <props>
           <prop key="refresh_interval">300000</prop>
           <prop key="query"><![CDATA[select * from site_metadata where last_modified >= '$last_modified']]></prop>
         </props>
       </constructor-arg>
   </bean>
 
   <bean id="handset_detector_cache_properties" class="java.util.Properties">
      <constructor-arg>
         <props>
           <prop key="refresh_interval">1800000</prop>
           <prop key="query"><![CDATA[select * from handset_detection_data where version = ? and modified_on >= '$last_modified']]></prop>
         </props>
       </constructor-arg>
   </bean>

   <bean id="offline_bidder_data_cache_props" class="java.util.Properties">
      <constructor-arg>
         <props>
           <!--<prop key="file_name"><![CDATA[/var/data/kritter/bidder/offline_bidder/bidder.data]]></prop>-->
           <prop key="query"><![CDATA[select * from bidder_models where id = 1 and last_modified >= '$last_modified']]></prop>
           <prop key="refresh_interval">30000</prop>
         </props>
      </constructor-arg>
   </bean>
 
   <bean id="lr_ctr_data_cache_props" class="java.util.Properties">
      <constructor-arg>
         <props>
           <!--<prop key="file_name"><![CDATA[/var/data/kritter/ctr/logistic_regression/lr_ctr.data]]></prop>-->
           <prop key="query"><![CDATA[select * from ctr_models where id = 1 and last_modified >= '$last_modified']]></prop>
           <prop key="refresh_interval">30000</prop>
           <prop key="others-id">-1</prop>
           <prop key="dim-coeff-delimiter"><![CDATA[:]]></prop>
           <prop key="dim-value-delimiter"><![CDATA[_]]></prop>
         </props>
      </constructor-arg>
    </bean>

    <bean id="lr_csr_data_cache_props" class="java.util.Properties">
      <constructor-arg>
         <props>
           <prop key="query"><![CDATA[select * from csr_models where id = 1 and last_modified >= '$last_modified']]></prop>
           <prop key="refresh_interval">30000</prop>
           <prop key="others-id">-1</prop>
           <prop key="dim-coeff-delimiter"><![CDATA[:]]></prop>
           <prop key="dim-value-delimiter"><![CDATA[_]]></prop>
         </props>
      </constructor-arg>
    </bean>

    <bean id="mnc_mcc_data_cache_props" class="java.util.Properties">
      <constructor-arg>
         <props>
           <prop key="query"><![CDATA[select mm.mnc as mnc,mm.mcc as mcc,uc.id as country_ui_id,ui.id as isp_ui_id,mm.last_modified as last_modified from mcc_mnc as mm,ui_targeting_country as uc,ui_targeting_isp as ui where mm.country_name = uc.country_name and mm.network_name = ui.isp_ui_name and uc.id = ui.country_ui_id and mm.last_modified >= '$last_modified' group by mm.mnc,mm.mcc]]></prop>
           <prop key="refresh_interval">3600000</prop>
         </props>
      </constructor-arg>
    </bean>

    <bean id="iab_categories_cache_props" class="java.util.Properties">
      <constructor-arg>
         <props>
           <prop key="query"><![CDATA[select * from content_categories where last_modified >= '$last_modified']]></prop>
           <prop key="refresh_interval">3600000</prop>
         </props>
      </constructor-arg>
    </bean>

    <bean id="maxmind_connection_type_cache_props" class="java.util.Properties">
      <constructor-arg>
         <props>
           <prop key="file_name"><![CDATA[/var/data/kritter/location/country/maxmind_netspeed_input.mmdb]]></prop>
           <prop key="refresh_interval">3600000</prop>
         </props>
      </constructor-arg>
    </bean>

    <!--
    <bean id="user_recent_history_cache_props" class="java.util.Properties">
      <constructor-arg>
         <props>
           <prop key="namespace"><![CDATA[user]]></prop>
           <prop key="table_name"><![CDATA[user_recent_imp_history]]></prop>
           <prop key="primary_key_name"><![CDATA[user_id]]></prop>
           <prop key="attribute_name_impression_history"><![CDATA[imp_history]]></prop>
         </props>
      </constructor-arg>
    </bean>
    -->

   <!--Adx cache beans and properties
    <bean id="adx_geo_criteria_cache" class="com.kritter.adx.reader.cache.AdxGeoCriteriaCache">
            <constructor-arg index="0">
                <list>
                </list>
            </constructor-arg>
            <constructor-arg index="1"><ref bean="adx_geo_criteria_cache_properties"/></constructor-arg>
            <constructor-arg index="2"><ref bean="db-manager"/></constructor-arg>
            <constructor-arg index="3" value="adx_geo_criteria_cache"/>
    </bean>

    <bean id="adx_geo_criteria_cache_properties" class="java.util.Properties">
      <constructor-arg>
         <props>
           <prop key="refresh_interval">86400000</prop>
           <prop key="query"><![CDATA[select * from adx_geo_criteria_data where last_modified >= '$last_modified']]></prop>
         </props>
       </constructor-arg>
    </bean>

    <bean id="adx_mobile_carrier_cache" class="com.kritter.adx.reader.cache.AdxMobileCarrierCache">
            <constructor-arg index="0">
                <list>
                </list>
            </constructor-arg>
            <constructor-arg index="1"><ref bean="adx_mobile_carrier_cache_properties"/></constructor-arg>
            <constructor-arg index="2"><ref bean="db-manager"/></constructor-arg>
            <constructor-arg index="3" value="adx_mobile_carrier_cache"/>
    </bean>

    <bean id="adx_mobile_carrier_cache_properties" class="java.util.Properties">
        <constructor-arg>
            <props>
                <prop key="refresh_interval">86400000</prop>
                <prop key="query"><![CDATA[select * from adx_mobile_carrier_info where last_modified >= '$last_modified']]></prop>
            </props>
        </constructor-arg>
    </bean>

    <bean id="country_code_cache" class="com.kritter.adx.reader.cache.CountryCodesMappingsCache">
        <constructor-arg index="0">
            <list>
            </list>
        </constructor-arg>
        <constructor-arg index="1"><ref bean="country_code_cache_properties"/></constructor-arg>
        <constructor-arg index="2"><ref bean="db-manager"/></constructor-arg>
        <constructor-arg index="3" value="country_code_cache"/>
    </bean>

    <bean id="country_code_cache_properties" class="java.util.Properties">
      <constructor-arg>
         <props>
           <prop key="refresh_interval">86400000</prop>
           <prop key="query"><![CDATA[select * from country_code_mappings where last_modified >= '$last_modified']]></prop>
         </props>
       </constructor-arg>
    </bean>

    <bean id="operators_cache" class="com.kritter.adx.reader.cache.OperatorsCache">
            <constructor-arg index="0">
                <list>
                </list>
            </constructor-arg>
            <constructor-arg index="1"><ref bean="operators_cache_properties"/></constructor-arg>
            <constructor-arg index="2"><ref bean="db-manager"/></constructor-arg>
            <constructor-arg index="3" value="operators_cache"/>
    </bean>

    <bean id="operators_cache_properties" class="java.util.Properties">
      <constructor-arg>
         <props>
           <prop key="refresh_interval">86400000</prop>
           <prop key="query"><![CDATA[select * from country_mnc_mcc_operators where last_modified >= '$last_modified']]></prop>
         </props>
       </constructor-arg>
    </bean>

    <bean id="blocked_sensitive_categories_cache" class="com.kritter.adx.reader.cache.AdxBlockedSensitiveCategoriesCache">
            <constructor-arg index="0">
                <list>
                    <value>com.kritter.adx.reader.entity.OpenRTBCategoryCode</value>
                </list>
            </constructor-arg>
            <constructor-arg index="1"><ref bean="blocked_sensitive_categories_cache_properties"/></constructor-arg>
            <constructor-arg index="2"><ref bean="db-manager"/></constructor-arg>
            <constructor-arg index="3" value="blocked_sensitive_categories_cache"/>
    </bean>

    <bean id="mobile_app_categories_cache" class="com.kritter.adx.reader.cache.MobileAppCategoryCache">
            <constructor-arg index="0">
                <list>
                </list>
            </constructor-arg>
            <constructor-arg index="1"><ref bean="mobile_app_category_cache_properties"/></constructor-arg>
            <constructor-arg index="2"><ref bean="db-manager"/></constructor-arg>
            <constructor-arg index="3" value="mobile_app_categories_cache"/>
    </bean>

    <bean id="blocked_sensitive_categories_cache_properties" class="java.util.Properties">
      <constructor-arg>
         <props>
           <prop key="refresh_interval">3600000</prop>
           <prop key="query"><![CDATA[select * from adx_sensitive_cat_rtb_cat where last_modified >= '$last_modified']]></prop>
         </props>
       </constructor-arg>
    </bean>

    <bean id="blocked_product_categories_cache" class="com.kritter.adx.reader.cache.AdxBlockedProductCategoriesCache">
            <constructor-arg index="0">
                <list>
                    <value>com.kritter.adx.reader.entity.OpenRTBCategoryCode</value>
                </list>
            </constructor-arg>
            <constructor-arg index="1"><ref bean="blocked_product_categories_cache_properties"/></constructor-arg>
            <constructor-arg index="2"><ref bean="db-manager"/></constructor-arg>
            <constructor-arg index="3" value="blocked_product_categories_cache"/>
    </bean>

    <bean id="blocked_product_categories_cache_properties" class="java.util.Properties">
      <constructor-arg>
         <props>
           <prop key="refresh_interval">3600000</prop>
           <prop key="query"><![CDATA[select * from adx_rtb_content_categories where last_modified >= '$last_modified']]></prop>
         </props>
       </constructor-arg>
    </bean>

    <bean id="mobile_app_category_cache_properties" class="java.util.Properties">
      <constructor-arg>
         <props>
           <prop key="refresh_interval">3600000</prop>
           <prop key="query"><![CDATA[select * from mobile_app_cat where last_modified >= '$last_modified']]></prop>
         </props>
       </constructor-arg>
    </bean>

    Adx cache classes end -->

   <bean id="ssp_global_rules_properties" class="java.util.Properties">
      <constructor-arg>
         <props>
           <prop key="refresh_interval">30000</prop>
           <prop key="query"><![CDATA[select * from ssp_global_rules where last_modified >= '$last_modified']]></prop>
         </props>
       </constructor-arg>
   </bean>

   <bean id="account_cache_properties" class="java.util.Properties">
      <constructor-arg>
         <props>
           <prop key="refresh_interval">30000</prop>
           <prop key="query"><![CDATA[select id as id, guid as guid, last_modified as last_modified, demandtype as demandtype, demandpreference as demandpreference, qps as qps, timeout as timeout,currency as currency,demand_props as demand_props,supply_props as supply_props from account where last_modified >= '$last_modified']]></prop>
         </props>
       </constructor-arg>
   </bean>

   <bean id="req_logging_cache_properties" class="java.util.Properties">
      <constructor-arg>
         <props>
           <prop key="refresh_interval">30000</prop>
           <prop key="query"><![CDATA[select * from req_logging where last_modified >= '$last_modified']]></prop>
         </props>
       </constructor-arg>
   </bean>

</beans>
